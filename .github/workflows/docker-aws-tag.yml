name: Tag image

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  clean:
    uses: tracefy/github-actions-workflows/.github/workflows/utilities-clean.yml@master
  tag:
    needs:
      - clean
    runs-on: [ self-hosted ]

    steps:
      - uses: actions/checkout@v3
      - name: Declare variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Log in to the Container registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PA_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image for commit
        if: ${{ inputs.tag == 'latest' }}
        run: |
          docker build -t ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }} .
          docker push ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}

      - name: Pull committed image
        if: ${{ inputs.tag != 'latest' }}
        run: docker pull ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:latest

      - name: Tag / push image
        run: |
          docker tag ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }} ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ inputs.tag }}
          docker push ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ inputs.tag }}

      - name: Tag / push child images
        if: ${{ inputs.tag != 'latest' }}
        run: |
          VAR=${{ inputs.tag }};IFS=".";
          set -- $VAR;
          unset IFS;
          docker tag ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ inputs.tag }} ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:$1;
          docker push ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:$1

          VAR=${{ inputs.tag }};IFS=".";
          set -- $VAR;unset IFS;
          docker tag ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:${{ inputs.tag }} ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:$1.$2;
          docker push ${{ secrets.REGISTRY }}/${{ github.event.repository.name }}:$1.$2
