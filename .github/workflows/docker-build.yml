name: build and push image

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      platforms:
        type: string
        default: linux/arm64
      push:
        type: boolean
        default: true
    secrets:
      token:
        description: The GITHUB_TOKEN used for authenticating to ghcr.io
        required: true

jobs:
  prepare:
    runs-on: [self-hosted]
    outputs:
      platforms: ${{ steps.vars.outputs.platforms }}
    steps:
      - name: set variables
        id: vars
        shell: bash
        env:
          PLATFORMS: ${{ inputs.platforms }}
        run: |
          data=$(echo "\"${PLATFORMS}\"" | jq -c 'split(",") | map({ "name": ., "runner": (if . == "linux/amd64" then "X86" else "ARM64" end)})')
          echo "platforms=${data}" >> $GITHUB_OUTPUT
      - name: cleanup
        uses: tracefy/github-actions-workflows/.github/actions/clean@multi-arch-builds
        if: always()


  build:
    runs-on: [self-hosted, "${{ matrix.platform.runner }}"]
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.token }}

      - name: docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tracefy/${{ github.event.repository.name }}
          tags: |
            type=raw,value=${{ inputs.tag }},enable=${{ !contains(inputs.tags, '.') }}
            type=semver,pattern={{version}},value=${{ inputs.tag }},enable=${{ contains(inputs.tags, '.') }}
            type=semver,pattern={{major}},value=${{ inputs.tag }},enable=${{ contains(inputs.tags, '.') && !(startsWith(inputs.tags, '0.') || startsWith(inputs.tags, 'v0.')) }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.tag }},enable=${{ contains(inputs.tags, '.') && !(startsWith(inputs.tags, '0.') || startsWith(inputs.tags, 'v0.')) }}
            type=sha,enable=true,prefix=,suffix=,format=short

      - name: build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.name }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: cleanup
        uses: tracefy/github-actions-workflows/.github/actions/clean@multi-arch-builds
        if: always()
